
// === silents =================
WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "//" ~ ( !NEWLINE ~ ANY )* ~ NEWLINE }


// === reserved keyword =================
KW_SELECT = @{ ^"SELECT" ~ !ASCII_ALPHANUMERIC }
KW_FROM   = @{ ^"FROM"  ~ !ASCII_ALPHANUMERIC }
KW_WITH   = @{ ^"WITH" ~ !ASCII_ALPHANUMERIC  }
KW_WHERE  = @{ ^"WHERE"  ~ !ASCII_ALPHANUMERIC }
KW_ASTERISK = @{ "*" ~ !ASCII_ALPHANUMERIC }

KW_TIMESTAMP  = @{ ^"ts" ~ !ASCII_ALPHANUMERIC }

KW_AND  = @{ ^"AND" ~ !ASCII_ALPHANUMERIC }
KW_OR  = @{ ^"OR" ~ !ASCII_ALPHANUMERIC }

KW_ASC  = @{ ^"DESC" ~ !ASCII_ALPHANUMERIC }
KW_DESC = @{ ^"ASC" ~ !ASCII_ALPHANUMERIC }

KW_OFFSET = @{ ^"OFFSET" ~ !ASCII_ALPHANUMERIC }
KW_LIMIT  = @{ ^"LIMIT" ~ !ASCII_ALPHANUMERIC }

KW_COLS = @{ ^"COLS" ~ !ASCII_ALPHANUMERIC }
KW_TZ  = @{ ^"TZ" ~ !ASCII_ALPHANUMERIC }

KW_SECOND  	= @{ ^"SECOND" ~ ^"S"? ~ !ASCII_ALPHANUMERIC }
KW_MINUTES  = @{ ^"MINUTE" ~ ^"S"? ~ !ASCII_ALPHANUMERIC }
KW_HOUR  		= @{ ^"HOUR" ~ ^"S"? ~ !ASCII_ALPHANUMERIC }
KW_DAY  		= @{ ^"DAY" ~ ^"S"? ~ !ASCII_ALPHANUMERIC }
KW_MONTH  	= @{ ^"MONTH" ~ ^"S"? ~ !ASCII_ALPHANUMERIC }
KW_YEAR  		= @{ ^"YEAR" ~ ^"S"? ~ !ASCII_ALPHANUMERIC }

//TODO(taocogips) detect invalid column name by query parser somehow
//COLUMN_UNAVAILABLE_KW  = { KW_TZ | KW_SELECT | KW_FROM   | KW_WITH   | KW_WHERE | KW_AND | KW_OR | KW_ASTERISK }

// === selector =================
STAR_SELECTOR =  { "*" }

TIME = { (ASCII_DIGIT | ":")+ }

TIMEZONE_OFFSET_VAL = @{ ( "+" | "-" ) ~ TIME }
TIMEZONE_NAME = { ASCII_ALPHA{3} }

COLUMN_NAME_AVAILABLE_SYMBOL = { "_" | "-"}
COLUMN_NAME = @{ ( ASCII_ALPHANUMERIC | COLUMN_NAME_AVAILABLE_SYMBOL )+ }

//TODO(tacogips) exclude KWs from column names
COLUMNS = { COLUMN_NAME  ~ ( "," ~  COLUMN_NAME )* ~ !"," }

TABLE_NAME_AVAILABLE_SYMBOL = { "_" | "-" | "."}
TABLE_NAME = @{ (ASCII_ALPHANUMERIC | TABLE_NAME_AVAILABLE_SYMBOL )+ }

DEFINE_COLUMNS = { KW_COLS ~ "=" ~  "[" ~ COLUMNS ~ "]" }
DEFINE_TZ      = { KW_TZ ~ "=" ~ ( TIMEZONE_OFFSET_VAL | TIMEZONE_NAME ) }

DATE_STR = { "'" ~ ( ASCII_ALPHANUMERIC | " " | "-" |"+" | ":" | ","| "/" )+ ~ "'"}
FN_TODAY = { ^"TODAY()" }
FN_YESTERDAY = { ^"YESTERDAY()" }
FN_TOMORROW = { ^"TOMORROW()" }


TIME_DELTA            = { ( "+" | "-" ) ~ TIME }
DATETIME_DELTA_VALUE  = { ( "+" | "-" ) ~ ASCII_DIGIT+  }
DATETIME_DELTA = { DATETIME_DELTA_VALUE ~ ( KW_SECOND | KW_MINUTES | KW_HOUR | KW_DAY	| KW_MONTH | KW_YEAR ) }
DATETIME_FN  = { FN_TODAY | FN_YESTERDAY | FN_TOMORROW }

DATETIME =   { ( DATETIME_FN  | DATE_STR ) ~ ( DATETIME_DELTA | TIME_DELTA )? }
DATETIME_RANGE =  { "(" ~ DATETIME ~"," ~ DATETIME ~ ")"}

REL_IN  = { ^"IN" }
REL_GTE = { ">=" }
REL_GT  = { ">" }
REL_LTE = { "<=" }
REL_LT  = { "<" }
REL_EQ  = { "=" }

REL_OP = { REL_IN | REL_GTE | REL_GT | REL_LTE | REL_LT | REL_EQ }


// ### 1. show datapoints in today
// ```
// with
// 	cols = [is_buy, volume, price],
// 	tz = +9
//
// select ts, is_buy, volume, price
// from trades
// where ts in today()
// offset 10 limit 200
// ```
//
// ### 2. show datapoints in specific range
// ```
// with
// 	cols = [_, volume, price],
// 	tz = JST
//
// select ts, volume, price
// from trades
// where ts in ('2012-12-13 9:00:00+09:00', '2012-12-13 9:00:00+09:00')
//
// ```

// === WITH CLAUS =========================================
WITH_CLAUSE   = { KW_WITH ~ ( DEFINE_TZ  | DEFINE_COLUMNS ) ~ ("," ~ (  DEFINE_TZ | DEFINE_COLUMNS ) )* }
SELECT_CLAUSE = { KW_SELECT ~ ( KW_ASTERISK | COLUMNS ) }
FROM_CLAUSE   = { KW_FROM ~ TABLE_NAME  }

WHERE_CLAUSE  = { KW_WHERE ~ KW_TIMESTAMP ~ REL_OP ~ ( DATETIME | DATETIME_RANGE )} // only simple condition is allowed now
LIMIT_CLAUSE  = { KW_LIMIT ~ ASCII_DIGIT+ } // only simple condition is allowed now
OFFSET_CLAUSE  = { KW_OFFSET ~ ASCII_DIGIT+ } // only simple condition is allowed now
ORDER_CLAUSE = { (COLUMN_NAME ~ KW_ASC?) | (COLUMN_NAME ~ KW_DESC) }
ORDER_OR_LIMIT_CLAUSE = { ORDER_CLAUSE | OFFSET_CLAUSE | LIMIT_CLAUSE  }

// === Query =================
QUERY = {
		SOI
	~ WITH_CLAUSE?
	~ SELECT_CLAUSE
	~ FROM_CLAUSE
	~ WHERE_CLAUSE?
	~ ORDER_OR_LIMIT_CLAUSE*
	~ EOI }


